/* Arregle las tablas de carrito, cliente y productos
*/

-- Crear tabla CLIENTES
CREATE TABLE CLIENTES (
    ID_CLIENTE NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NOMBRE VARCHAR2(50) NOT NULL,
    APELLIDO VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    DIRECCION VARCHAR2(200),
    TELEFONO VARCHAR2(15),
    PRIMARY KEY (ID_CLIENTE)
);

-- Crear tabla CARRITO
CREATE TABLE CARRITO (
    ID_CARRITO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_CLIENTE NUMBER,
    TOTAL NUMBER(10, 2) DEFAULT 0,
    FECHA DATE DEFAULT SYSDATE,
    PRIMARY KEY (ID_CARRITO),
    CONSTRAINT FK_CARRITO_CLIENTE FOREIGN KEY (ID_CLIENTE)
        REFERENCES CLIENTES (ID_CLIENTE)
        );
        
-- Crear tabla PROVEEDORES
CREATE TABLE PROVEEDORES (
    ID_PROVEEDOR NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CONTACTO VARCHAR2(100),
    TELEFONO VARCHAR2(15),
    DIRECCION VARCHAR2(200)
);

-- Crear tabla SUCURSALES
CREATE TABLE SUCURSALES (
    ID_SUCURSAL NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(200) NOT NULL,
    TELEFONO VARCHAR2(15)
);

-- Crear tabla EMPLEADOS
CREATE TABLE EMPLEADOS (
    ID_EMPLEADO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    APELLIDO VARCHAR2(100) NOT NULL,
    TELEFONO VARCHAR2(15),
    ID_SUCURSAL NUMBER NOT NULL,
    CONSTRAINT FK_ID_SUCURSAL FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSALES(ID_SUCURSAL)
);

-- Crear tabla PRODUCTOS
CREATE TABLE PRODUCTOS (
    ID_PRODUCTO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(255),
    PRECIO NUMBER(10, 2) NOT NULL,
    ID_CATEGORIA NUMBER,
    ID_PROVEEDOR NUMBER,
    PRIMARY KEY (ID_PRODUCTO),
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (ID_CATEGORIA)
        REFERENCES CATEGORIAS (ID_CATEGORIA),
    CONSTRAINT FK_PRODUCTO_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR)
        REFERENCES PROVEEDORES (ID_PROVEEDOR)
);

-- Crear tabla ORDENES
CREATE TABLE ORDENES (
    ID_ORDEN NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_CLIENTE NUMBER,
    ID_EMPLEADO NUMBER,
    FECHA DATE DEFAULT SYSDATE,
    TOTAL NUMBER(10, 2) NOT NULL,
    PRIMARY KEY (ID_ORDEN),
    CONSTRAINT FK_ORDEN_CLIENTE FOREIGN KEY (ID_CLIENTE)
        REFERENCES CLIENTES (ID_CLIENTE),
    CONSTRAINT FK_ORDEN_EMPLEADO FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADOS (ID_EMPLEADO)
);

-- Crear tabla INVENTARIO
CREATE TABLE INVENTARIO (
    ID_INVENTARIO NUMBER PRIMARY KEY,
    ID_SUCURSAL NUMBER,
    ID_PRODUCTO NUMBER,
    CANTIDAD NUMBER NOT NULL,
    ULTIMA_ACTUALIZACION DATE DEFAULT SYSDATE,
    CONSTRAINT FK_INVENTARIO_SUCURSAL FOREIGN KEY (ID_SUCURSAL) REFERENCES SUCURSALES(ID_SUCURSAL),
    CONSTRAINT FK_INVENTARIO_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)
);

-- Crear tabla ORDENES_PRODUCTOS
CREATE TABLE ORDENES_PRODUCTOS (
    ID_ORDEN NUMBER,
    ID_PRODUCTO NUMBER,
    CANTIDAD NUMBER NOT NULL,
    PRIMARY KEY (ID_ORDEN, ID_PRODUCTO),
    CONSTRAINT FK_ORDENES_PRODUCTOS_ORDEN FOREIGN KEY (ID_ORDEN)
        REFERENCES ORDENES (ID_ORDEN),
    CONSTRAINT FK_ORDENES_PRODUCTOS_PRODUCTO FOREIGN KEY (ID_PRODUCTO)
        REFERENCES PRODUCTOS (ID_PRODUCTO)
);

-- Crear tabla CATEGORIAS
CREATE TABLE CATEGORIAS (
    ID_CATEGORIA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NOMBRE_CATEGORIA VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(255),
    PRIMARY KEY (ID_CATEGORIA)
    );
    
-- Crear tabla ENVIOS
CREATE TABLE ENVIOS (
    ID_ENVIO NUMBER PRIMARY KEY,
    ID_ORDEN NUMBER NOT NULL,
    ESTADO VARCHAR2(50) NOT NULL,
    FECHA_ENVIO DATE DEFAULT SYSDATE,
    FECHA_ENTREGA_ESTIMADA DATE,
    DIRECCION_ENVIO VARCHAR2(200) NOT NULL,
    CONSTRAINT FK_ID_ORDEN FOREIGN KEY (ID_ORDEN) REFERENCES ORDENES(ID_ORDEN)
);

-- Crear tabla CARRITO_PRODUCTO
CREATE TABLE CARRITO_PRODUCTO (
    ID_CARRITO NUMBER,
    ID_PRODUCTO NUMBER,
    CANTIDAD NUMBER NOT NULL,
    PRIMARY KEY (ID_CARRITO, ID_PRODUCTO),
    CONSTRAINT FK_ID_CARRITO FOREIGN KEY (ID_CARRITO) REFERENCES CARRITO(ID_CARRITO),
    CONSTRAINT FK_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)
);

-- Creaci n de la tabla CARRITO_PRODUCTO
CREATE TABLE CARRITO_PRODUCTO (
    ID_CARRITO NUMBER,               
    ID_PRODUCTO NUMBER,              
    CANTIDAD NUMBER NOT NULL,        
    CONSTRAINT PK_CARRITO_PRODUCTO PRIMARY KEY (ID_CARRITO, ID_PRODUCTO), 
    CONSTRAINT FK_ID_CARRITO FOREIGN KEY (ID_CARRITO) REFERENCES CARRITO(ID_CARRITO), 
    CONSTRAINT FK_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO) 
);

-- Crear carrito
CREATE OR REPLACE PROCEDURE sp_create_carrito (
    p_id_cliente NUMBER,
    p_total NUMBER,
    p_fecha DATE
) AS
BEGIN
    INSERT INTO CARRITO (ID_CLIENTE, TOTAL, FECHA)
    VALUES (p_id_cliente, p_total, p_fecha);
END sp_create_carrito;
/

-- Leer carrito
CREATE OR REPLACE PROCEDURE sp_get_carrito (
    p_id_carrito NUMBER,
    p_id_cliente OUT NUMBER,
    p_total OUT NUMBER,
    p_fecha OUT DATE
) AS
BEGIN
    SELECT ID_CLIENTE, TOTAL, FECHA
    INTO p_id_cliente, p_total, p_fecha
    FROM CARRITO
    WHERE ID_CARRITO = p_id_carrito;
END sp_get_carrito;
/

-- Actualizar carrito
CREATE OR REPLACE PROCEDURE sp_update_carrito (
    p_id_carrito NUMBER,
    p_id_cliente NUMBER,
    p_total NUMBER,
    p_fecha DATE
) AS
BEGIN
    UPDATE CARRITO
    SET ID_CLIENTE = p_id_cliente, TOTAL = p_total, FECHA = p_fecha
    WHERE ID_CARRITO = p_id_carrito;
END sp_update_carrito;
/

-- Eliminar carrito
CREATE OR REPLACE PROCEDURE sp_delete_carrito (
    p_id_carrito NUMBER
) AS
BEGIN
    DELETE FROM CARRITO WHERE ID_CARRITO = p_id_carrito;
END sp_delete_carrito;
/


-- Crear categor a
CREATE OR REPLACE PROCEDURE sp_create_categoria (
    p_nombre_categoria VARCHAR2,
    p_descripcion VARCHAR2
) AS
BEGIN
    INSERT INTO CATEGORIAS (NOMBRE_CATEGORIA, DESCRIPCION)
    VALUES (p_nombre_categoria, p_descripcion);
END sp_create_categoria;
/

-- Leer categor a
CREATE OR REPLACE PROCEDURE sp_get_categoria (
    p_id_categoria NUMBER,
    p_nombre_categoria OUT VARCHAR2,
    p_descripcion OUT VARCHAR2
) AS
BEGIN
    SELECT NOMBRE_CATEGORIA, DESCRIPCION
    INTO p_nombre_categoria, p_descripcion
    FROM CATEGORIAS
    WHERE ID_CATEGORIA = p_id_categoria;
END sp_get_categoria;
/

-- Actualizar categor a
CREATE OR REPLACE PROCEDURE sp_update_categoria (
    p_id_categoria NUMBER,
    p_nombre_categoria VARCHAR2,
    p_descripcion VARCHAR2
) AS
BEGIN
    UPDATE CATEGORIAS
    SET NOMBRE_CATEGORIA = p_nombre_categoria, DESCRIPCION = p_descripcion
    WHERE ID_CATEGORIA = p_id_categoria;
END sp_update_categoria;
/

-- Eliminar categor a
CREATE OR REPLACE PROCEDURE sp_delete_categoria (
    p_id_categoria NUMBER
) AS
BEGIN
    DELETE FROM CATEGORIAS WHERE ID_CATEGORIA = p_id_categoria;
END sp_delete_categoria;
/

-- Procedimiento para crear un cliente
CREATE OR REPLACE PROCEDURE sp_create_cliente (
    p_nombre VARCHAR2,
    p_apellido VARCHAR2,
    p_email VARCHAR2,
    p_direccion VARCHAR2,
    p_telefono VARCHAR2
) AS
BEGIN
    INSERT INTO CLIENTES (NOMBRE, APELLIDO, EMAIL, DIRECCION, TELEFONO)
    VALUES (p_nombre, p_apellido, p_email, p_direccion, p_telefono);
END;
/

-- Procedimiento para leer clientes
CREATE OR REPLACE PROCEDURE sp_get_cliente (
    p_id_cliente NUMBER,
    p_nombre OUT VARCHAR2,
    p_apellido OUT VARCHAR2,
    p_email OUT VARCHAR2,
    p_direccion OUT VARCHAR2,
    p_telefono OUT VARCHAR2
) AS
BEGIN
    SELECT NOMBRE, APELLIDO, EMAIL, DIRECCION, TELEFONO
    INTO p_nombre, p_apellido, p_email, p_direccion, p_telefono
    FROM CLIENTES
    WHERE ID_CLIENTE = p_id_cliente;
END;
/

-- Procedimiento para actualizar un cliente
CREATE OR REPLACE PROCEDURE sp_update_cliente (
    p_id_cliente NUMBER,
    p_nombre VARCHAR2,
    p_apellido VARCHAR2,
    p_email VARCHAR2,
    p_direccion VARCHAR2,
    p_telefono VARCHAR2
) AS
BEGIN
    UPDATE CLIENTES
    SET NOMBRE = p_nombre, APELLIDO = p_apellido, EMAIL = p_email,
        DIRECCION = p_direccion, TELEFONO = p_telefono
    WHERE ID_CLIENTE = p_id_cliente;
END;
/

-- Procedimiento para eliminar un cliente
CREATE OR REPLACE PROCEDURE sp_delete_cliente (
    p_id_cliente NUMBER
) AS
BEGIN
    DELETE FROM CLIENTES WHERE ID_CLIENTE = p_id_cliente;
END;
/

-- Crear orden
CREATE OR REPLACE PROCEDURE sp_create_orden (
    p_id_cliente NUMBER,
    p_id_empleado NUMBER,
    p_fecha DATE,
    p_total NUMBER
) AS
BEGIN
    INSERT INTO ORDENES (ID_CLIENTE, ID_EMPLEADO, FECHA, TOTAL)
    VALUES (p_id_cliente, p_id_empleado, p_fecha, p_total);
END sp_create_orden;
/

-- Leer orden
CREATE OR REPLACE PROCEDURE sp_get_orden (
    p_id_orden NUMBER,
    p_id_cliente OUT NUMBER,
    p_id_empleado OUT NUMBER,
    p_fecha OUT DATE,
    p_total OUT NUMBER
) AS
BEGIN
    SELECT ID_CLIENTE, ID_EMPLEADO, FECHA, TOTAL
    INTO p_id_cliente, p_id_empleado, p_fecha, p_total
    FROM ORDENES
    WHERE ID_ORDEN = p_id_orden;
END sp_get_orden;
/

-- Actualizar orden
CREATE OR REPLACE PROCEDURE sp_update_orden (
    p_id_orden NUMBER,
    p_id_cliente NUMBER,
    p_id_empleado NUMBER,
    p_fecha DATE,
    p_total NUMBER
) AS
BEGIN
    UPDATE ORDENES
    SET ID_CLIENTE = p_id_cliente, ID_EMPLEADO = p_id_empleado,
        FECHA = p_fecha, TOTAL = p_total
    WHERE ID_ORDEN = p_id_orden;
END sp_update_orden;
/

-- Eliminar orden
CREATE OR REPLACE PROCEDURE sp_delete_orden (
    p_id_orden NUMBER
) AS
BEGIN
    DELETE FROM ORDENES WHERE ID_ORDEN = p_id_orden;
END sp_delete_orden;
/

-- Crear producto
CREATE OR REPLACE PROCEDURE sp_create_producto (
    p_nombre VARCHAR2,
    p_descripcion VARCHAR2,
    p_precio NUMBER,
    p_id_categoria NUMBER,
    p_id_proveedor NUMBER
) AS
BEGIN
    INSERT INTO PRODUCTOS (NOMBRE, DESCRIPCION, PRECIO, ID_CATEGORIA, ID_PROVEEDOR)
    VALUES (p_nombre, p_descripcion, p_precio, p_id_categoria, p_id_proveedor);
END sp_create_producto;
/

-- Leer producto
CREATE OR REPLACE PROCEDURE sp_get_producto (
    p_id_producto NUMBER,
    p_nombre OUT VARCHAR2,
    p_descripcion OUT VARCHAR2,
    p_precio OUT NUMBER,
    p_id_categoria OUT NUMBER,
    p_id_proveedor OUT NUMBER
) AS
BEGIN
    SELECT NOMBRE, DESCRIPCION, PRECIO, ID_CATEGORIA, ID_PROVEEDOR
    INTO p_nombre, p_descripcion, p_precio, p_id_categoria, p_id_proveedor
    FROM PRODUCTOS
    WHERE ID_PRODUCTO = p_id_producto;
END sp_get_producto;
/

-- Actualizar producto
CREATE OR REPLACE PROCEDURE sp_update_producto (
    p_id_producto NUMBER,
    p_nombre VARCHAR2,
    p_descripcion VARCHAR2,
    p_precio NUMBER,
    p_id_categoria NUMBER,
    p_id_proveedor NUMBER
) AS
BEGIN
    UPDATE PRODUCTOS
    SET NOMBRE = p_nombre, DESCRIPCION = p_descripcion, PRECIO = p_precio,
        ID_CATEGORIA = p_id_categoria, ID_PROVEEDOR = p_id_proveedor
    WHERE ID_PRODUCTO = p_id_producto;
END sp_update_producto;
/

-- Eliminar producto
CREATE OR REPLACE PROCEDURE sp_delete_producto (
    p_id_producto NUMBER
) AS
BEGIN
    DELETE FROM PRODUCTOS WHERE ID_PRODUCTO = p_id_producto;
END sp_delete_producto;
/

-- Crear proveedor
CREATE OR REPLACE PROCEDURE sp_create_proveedor (
    p_nombre VARCHAR2,
    p_contacto VARCHAR2,
    p_telefono VARCHAR2,
    p_direccion VARCHAR2
) AS
BEGIN
    INSERT INTO PROVEEDORES (NOMBRE, CONTACTO, TELEFONO, DIRECCION)
    VALUES (p_nombre, p_contacto, p_telefono, p_direccion);
END sp_create_proveedor;
/

-- Leer proveedor
CREATE OR REPLACE PROCEDURE sp_get_proveedor (
    p_id_proveedor NUMBER,
    p_nombre OUT VARCHAR2,
    p_contacto OUT VARCHAR2,
    p_telefono OUT VARCHAR2,
    p_direccion OUT VARCHAR2
) AS
BEGIN
    SELECT NOMBRE, CONTACTO, TELEFONO, DIRECCION
    INTO p_nombre, p_contacto, p_telefono, p_direccion
    FROM PROVEEDORES
    WHERE ID_PROVEEDOR = p_id_proveedor;
END sp_get_proveedor;
/

-- Actualizar proveedor
CREATE OR REPLACE PROCEDURE sp_update_proveedor (
    p_id_proveedor NUMBER,
    p_nombre VARCHAR2,
    p_contacto VARCHAR2,
    p_telefono VARCHAR2,
    p_direccion VARCHAR2
) AS
BEGIN
    UPDATE PROVEEDORES
    SET NOMBRE = p_nombre, CONTACTO = p_contacto, TELEFONO = p_telefono, 
        DIRECCION = p_direccion
    WHERE ID_PROVEEDOR = p_id_proveedor;
END sp_update_proveedor;
/

-- Eliminar proveedor
CREATE OR REPLACE PROCEDURE sp_delete_proveedor (
    p_id_proveedor NUMBER
) AS
BEGIN
    DELETE FROM PROVEEDORES WHERE ID_PROVEEDOR = p_id_proveedor;
END sp_delete_proveedor;
/

-- Actualizar sucursal
CREATE OR REPLACE PROCEDURE sp_update_sucursal (
    p_id_sucursal NUMBER,
    p_nombre VARCHAR2,
    p_direccion VARCHAR2,
    p_telefono VARCHAR2
) AS
BEGIN
    UPDATE SUCURSALES
    SET NOMBRE = p_nombre, DIRECCION = p_direccion, TELEFONO = p_telefono
    WHERE ID_SUCURSAL = p_id_sucursal;
END sp_update_sucursal;
/

-- Eliminar sucursal
CREATE OR REPLACE PROCEDURE sp_delete_sucursal (
    p_id_sucursal NUMBER
) AS
BEGIN
    DELETE FROM SUCURSALES WHERE ID_SUCURSAL = p_id_sucursal;
END sp_delete_sucursal;
/